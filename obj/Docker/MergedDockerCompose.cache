name: dockercompose7495471939798430214
services:
  gateway.api:
    build:
      context: D:\PRM392\GroupAssignment\pes-microservice
      dockerfile: Gateway.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
    image: gatewayapi
    networks:
      proxybackend: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: StrongPa123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      proxybackend: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sql_data
        target: /var/opt/mssql
        volume: {}
  termadmissionmanagement.api:
    build:
      context: D:\PRM392\GroupAssignment\pes-microservice
      dockerfile: TermAdmissionManagement.API/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
    image: termadmissionmanagementapi
    networks:
      proxybackend: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\huatr\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  proxybackend:
    name: proxybackend
    driver: bridge
volumes:
  sql_data:
    name: dockercompose7495471939798430214_sql_data